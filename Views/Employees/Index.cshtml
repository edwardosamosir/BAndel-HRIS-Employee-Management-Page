<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Employee Management</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

  <style>
    :root{
      --palette-green-900:#0d6b57;
      --palette-green-800:#0e7a60;
      --palette-green-700:#0f8f78;
      --palette-green-600:#11a07f;
      --palette-green-500:#17b27e;
      --palette-teal-500:#1fb29c;
      --palette-text:#0b2b24;
      --palette-stroke: rgba(255,255,255,0.18);
      --palette-yellow:#ffc94a; /* CTA */
    }

    /* Hero gradient + soft radial highlights */
    body{
      color:#ffffff;
      background:
        radial-gradient(1200px 800px at 80% 10%, rgba(255,255,255,.06), transparent 60%),
        radial-gradient(900px 900px at 10% 30%, rgba(255,255,255,.05), transparent 60%),
        linear-gradient(140deg, var(--palette-green-700) 0%, var(--palette-green-900) 55%, #0b5c4d 100%);
      min-height:100vh;
    }

    /* Decorative wave lines on the right */
    .bg-waves{
      position: fixed;
      inset: 0;
      pointer-events: none;
      mask-image: linear-gradient(to left, rgba(0,0,0,.55), rgba(0,0,0,0));
      opacity:.35;
      z-index: 0;
    }

    .container { position: relative; z-index: 1; }

    .card{
      border-radius: 20px;
      border: 1px solid var(--palette-stroke);
      background: linear-gradient(180deg, rgba(255,255,255,.12), rgba(255,255,255,.08));
      box-shadow: 0 20px 50px -16px rgba(0,0,0,.35);
    }

    .text-secondary{ color: rgba(255,255,255,.72) !important; }

    /* CTA pill button */
    .btn-cta{
      border:0;
      color:#0b2b24;
      font-weight:700;
      background: linear-gradient(180deg, var(--palette-yellow), #ffb833);
      border-radius: 999px;
      padding:.8rem 1.4rem;
      box-shadow: 0 12px 24px -10px rgba(255,201,74,.6);
    }
    .btn-cta:hover{ filter: brightness(1.02); }

    /* Inputs and selects */
    .form-control, .form-select{
      background: rgba(255,255,255,.9);
      border: none;
      color: var(--palette-text);
    }
    .form-control:focus, .form-select:focus{
      box-shadow: 0 0 0 .25rem rgba(31,178,156,.25);
      border: none;
    }
    .form-label{ color: #eafaf3; font-weight:600; }

    /* Table */
    .table{ color:#eafaf3; }
    .table thead th{
      color:#d2fff1;
      background: linear-gradient(180deg, rgba(255,255,255,.08), rgba(255,255,255,.02));
      border-bottom: 1px solid rgba(255,255,255,.15);
      letter-spacing: .02em;
    }
    .table tbody tr:hover{ background: rgba(255,255,255,.06); }

    .badge-pill{ border-radius: 999px; background: #0fd3a6; color:#083a32; }

  </style>
</head>
<body>

<!-- Decorative waves -->
<svg class="bg-waves" viewBox="0 0 1440 1024" preserveAspectRatio="none" aria-hidden="true">
  <defs>
    <linearGradient id="waveStroke" x1="0" x2="1" y1="0" y2="0">
      <stop offset="0%" stop-color="#c0ffe7" stop-opacity=".35"/>
      <stop offset="100%" stop-color="#c0ffe7" stop-opacity=".05"/>
    </linearGradient>
  </defs>
  <path d="M1440  40 C1100 160, 1100 300, 1440 420" fill="none" stroke="url(#waveStroke)" stroke-width="2"/>
  <path d="M1440 100 C1080 220, 1080 360, 1440 480" fill="none" stroke="url(#waveStroke)" stroke-width="2"/>
  <path d="M1440 160 C1060 280, 1060 420, 1440 540" fill="none" stroke="url(#waveStroke)" stroke-width="2"/>
  <path d="M1440 220 C1040 340, 1040 480, 1440 600" fill="none" stroke="url(#waveStroke)" stroke-width="2"/>
  <path d="M1440 280 C1020 400, 1020 540, 1440 660" fill="none" stroke="url(#waveStroke)" stroke-width="2"/>
</svg>

<div class="container py-5 white-text">
  <div class="d-flex align-items-center justify-content-between mb-4">
    <div>
      <h1 class="fw-bold mb-1" style="font-size:clamp(1.6rem,3vw,2.4rem)">BAndel HRIS - Employee Management Page</h1>
    </div>
    <div>
      <button id="btnAdd" class="btn btn-cta btn-lg">
        <i class="bi bi-plus-circle me-1" ></i> Add Employee Data
      </button>
    </div>
  </div>

  <div class="row g-4 mb-4">
    <div class="col-md-4">
      <div class="card p-3">
        <div class="d-flex align-items-center">
          <div class="me-3 fs-3" style="color:white"><i class="bi bi-people"></i></div>
          <div>
            <div class="text-secondary small" style="color:white">Total Employees</div>
            <div id="statTotal" class="fs-4 fw-semibold" style="color:white">0</div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card p-3">
        <div class="d-flex align-items-center">
          <div class="me-3 fs-3" style="color:white"><i class="bi bi-gender-ambiguous"></i></div>
          <div>
            <div class="text-secondary small" style="color:white">Gender Split (L/P)</div>
            <div id="statGender" class="fs-4 fw-semibold" style="color:white">-</div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card p-3">
        <div class="d-flex align-items-center">
          <div class="me-3 fs-3"><i class="bi bi-cash-coin" style="color:white"></i></div>
          <div>
            <div class="text-secondary small" style="color:white">Average Salary</div>
            <div id="statAvg" class="fs-4 fw-semibold" style="color:white">-</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="card p-3">
    <div class="d-flex flex-wrap gap-3 align-items-center mb-3">
      <div class="input-group w-auto">
        <span class="input-group-text"><i class="bi bi-search"></i></span>
        <input id="txtSearch" type="text" class="form-control" placeholder="Search by ID or Name..." style="color:black" />
      </div>
    </div>
    <div class="table-responsive">
      <table class="table table-hover align-middle" id="tblEmployees">
        <thead>
          <tr>
            <th>Employee Name</th>
            <th>Employee ID</th>
            <th>Place and Date of Birth</th>
            <th>Gender</th>
            <th>Marital Status</th>
            <th class="text-end">Basic Salary</th>
            <th style="width: 100px;"></th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
  </div>
</div>

<!-- Modal Form -->
<div class="modal fade" id="empModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content" 
    style="
      background:
        radial-gradient(1200px 800px at 80% 10%, rgba(255,255,255,.06), transparent 60%),
        radial-gradient(900px 900px at 10% 30%, rgba(255,255,255,.05), transparent 60%),
        linear-gradient(140deg, var(--palette-green-700) 0%, var(--palette-green-900) 55%, #0b5c4d 100%);
      border:1px solid var(--palette-stroke);
      border-radius:20px;
    ">
      <div class="modal-header border-0">
        <h5 class="modal-title fw-semibold" id="empModalLabel" >Add Employee Data</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="empForm" novalidate>
          <div class="row g-3">
            <div class="col-md-4">
              <label class="form-label">Employee ID</label>
              <input name="Id" id="Id" class="form-control" required minlength="3" maxlength="32" />
            </div>
            <div class="col-md-8">
              <label class="form-label">Employee Name</label>
              <input name="Name" id="Name" class="form-control" required maxlength="80" />
            </div>
            <div class="col-md-6">
              <label class="form-label">Place of Birth</label>
              <input name="PlaceOfBirth" id="PlaceOfBirth" class="form-control" required maxlength="80" />
            </div>
            <div class="col-md-6">
              <label class="form-label">Date of Birth</label>
              <input type="date" name="DateOfBirth" id="DateOfBirth" class="form-control" required />
            </div>
            <div class="col-md-6">
              <label class="form-label">Basic Salary</label>
              <input type="number" step="1" min="0" name="BasicSalary" id="BasicSalary" class="form-control" required />
            </div>
            <div class="col-md-3">
              <label class="form-label">Gender</label>
              <select name="Gender" id="Gender" class="form-select" required>
                <option value="">-- choose --</option>
                <option value="P">Perempuan</option>
                <option value="L">Laki-Laki</option>
              </select>
            </div>
            <div class="col-md-3">
              <label class="form-label">Marital Status</label>
              <select name="MaritalStatus" id="MaritalStatus" class="form-select" required>
                <option value="">-- choose --</option>
                <option>Single</option>
                <option>Married</option>
                <option>Divorced</option>
              </select>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer border-0">
        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button id="btnSave" class="btn btn-cta">Save</button>
      </div>
    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
<script>
  const modal = new bootstrap.Modal(document.getElementById('empModal'));
  let editingId = null;

  function money(n){ return new Intl.NumberFormat().format(n); }

  function load(){
    $.getJSON('/Employees/List', function(rows){
      const q = ($('#txtSearch').val()||'').toLowerCase();
      const data = rows.filter(r => r.id.toLowerCase().includes(q) || r.name.toLowerCase().includes(q));
      const tbody = $('#tblEmployees tbody').empty();
      let p=0,l=0,total=0,sum=0;

      data.forEach(r => {
        p += (r.gender===0);
        l += (r.gender===1);
        total++;
        sum += r.basicSalary;

        const tr = $(`
          <tr role="button">
            <td>
            <i class="bi bi-person-circle me-2"></i> ${r.name}
            </td>
            <td class="fw-semibold">${r.id}</td>
            <td class="small" style="color: black;">
              ${r.placeOfBirth}, ${new Date(r.dateOfBirth).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' })}
            </td>
            <td>
              <i class="bi ${r.gender===0 ? 'bi-gender-female' : 'bi-gender-male'} me-1"></i>
              <span class="badge badge-pill">${r.gender===0 ? 'Perempuan' : 'Laki-Laki'}</span>
            </td>
            <td>${['Single','Married','Divorced'][r.maritalStatus]}</td>
            <td class="text-end">Rp ${money(r.basicSalary)}</td>
            <td class="text-end">
              <button class="btn btn-sm btn-light edit"><i class="bi bi-pencil"></i></button>
              <button class="btn btn-sm btn-danger delete"><i class="bi bi-trash"></i></button>
            </td>
          </tr>`);

        tr.find('.edit').on('click', (e)=>{ e.stopPropagation(); openEdit(r); });
        tr.find('.delete').on('click', (e)=>{ e.stopPropagation(); del(r.id); });
        tr.on('click', ()=>openEdit(r));
        tbody.append(tr);
      });

      $('#statTotal').text(total);
      $('#statGender').html(
        `<i class="bi bi-gender-male"></i>${l} <small>Laki-Laki</small> -
         <i class="bi bi-gender-female"></i>${p} <small>Perempuan</small>
         `
      );
      $('#statAvg').text(total? ('Rp ' + money(Math.round(sum/total))) : '-');
    });
  }

  function openCreate(){
    editingId = null;
    $('#empModalLabel').text('Add Employee Data');
    $('#empForm')[0].reset();
    $('#Id').prop('readonly', false);
    modal.show();
  }

  function openEdit(r){
    editingId = r.id;
    $('#empModalLabel').text('Edit Employee Data');
    $('#Id').val(r.id).prop('readonly', true);
    $('#Name').val(r.name);
    $('#PlaceOfBirth').val(r.placeOfBirth);
    $('#DateOfBirth').val(r.dateOfBirth.substring(0,10));
    $('#BasicSalary').val(r.basicSalary);
    $('#Gender').val(r.gender===0?'P':'L');
    $('#MaritalStatus').val(['Single','Married','Divorced'][r.maritalStatus]);
    modal.show();
  }

  function del(id){
    if(!confirm('Delete this employee?')) return;
    $.ajax({
      url: `/Employees/${encodeURIComponent(id)}`,
      method: 'DELETE',
      success: function(r){
        if(r.ok) load(); else alert(r.message||'Failed');
      },
      error: function(xhr){
        alert('Delete failed: ' + (xhr.responseText || xhr.status));
      }
    });
  }

  $(function(){
    load();
    $('#txtSearch').on('input', load);
    $('#btnAdd').on('click', openCreate);

    $('#empForm').validate({
      errorClass: 'is-invalid',
      validClass: 'is-valid',
      highlight: function(el){ $(el).addClass('is-invalid'); },
      unhighlight: function(el){ $(el).removeClass('is-invalid'); },
      rules: {
        Id: { required: true, minlength:3, maxlength:32 },
        Name: { required: true, maxlength:80 },
        PlaceOfBirth: { required: true, maxlength:80 },
        DateOfBirth: { required: true, date: true },
        BasicSalary: { required: true, number: true, min: 0 },
        Gender: { required: true },
        MaritalStatus: { required: true }
      }
    });

    $('#btnSave').on('click', function(){
      if(!$('#empForm').valid()) return;

      const payload = {
        id: $('#Id').val(),
        name: $('#Name').val(),
        placeOfBirth: $('#PlaceOfBirth').val(),
        dateOfBirth: $('#DateOfBirth').val(),            // ISO date string OK
        basicSalary: +$('#BasicSalary').val(),
        gender: $('#Gender').val()==='P'?0:1,            // send enum as number (0/1)
        maritalStatus: ['Single','Married','Divorced'].indexOf($('#MaritalStatus').val()) // 0/1/2
      };

      if (editingId) {
        // PUT update as JSON
        $.ajax({
          url: `/Employees/${encodeURIComponent(editingId)}`,
          method: 'PUT',
          contentType: 'application/json',
          data: JSON.stringify(payload),
          success: function(r){
            if(r.ok){ modal.hide(); load(); } else { alert(r.message||'Validation error'); }
          },
          error: function(xhr){
            console.error(xhr.responseText);
            alert('Update failed: ' + (xhr.responseText || xhr.status));
          }
        });
      } else {
        // POST create (form-encoded matches [FromForm])
        $.ajax({
          url: '/Employees/Create',
          method: 'POST',
          data: payload,
          success: function(r){
            if(r.ok){ modal.hide(); load(); } else { alert(r.message||'Validation error'); }
          },
          error: function(xhr){
            alert('Create failed: ' + (xhr.responseText || xhr.status));
          }
        });
      }
    });
  });
</script>
</body>
</html>